/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  PollContractAbi,
  PollContractAbiInterface,
} from "../PollContractAbi";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "PollContract_AlreadyVotedInPoll",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "receivedTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "blockTimestamp",
        type: "uint256",
      },
    ],
    name: "PollContract_NeededBiggerClosesAtDate",
    type: "error",
  },
  {
    inputs: [],
    name: "PollContract_NotEnoughOptionsProvided",
    type: "error",
  },
  {
    inputs: [],
    name: "PollContract_PollIsClosed",
    type: "error",
  },
  {
    inputs: [],
    name: "PollContract_WrongAmountOfOptionsProvided",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "voteId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pollId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "voter",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "optionId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pollId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "numberOfVotes",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
            ],
            internalType: "struct PollContract.Option[]",
            name: "optionsVoted",
            type: "tuple[]",
          },
        ],
        indexed: false,
        internalType: "struct PollContract.Vote",
        name: "newVote",
        type: "tuple",
      },
    ],
    name: "NewVoteInPoll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "bool",
            name: "allowMultipleOptionsSelected",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "closesAt",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "numberOfOptions",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct PollContract.Poll",
        name: "pollCreated",
        type: "tuple",
      },
    ],
    name: "PollCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
      {
        internalType: "bool",
        name: "_allowMultipleOptionsSelected",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "_closesAt",
        type: "uint256",
      },
      {
        internalType: "string[]",
        name: "_options",
        type: "string[]",
      },
    ],
    name: "createPoll",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pollId",
        type: "uint256",
      },
    ],
    name: "getMyVoteInPoll",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "voteId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pollId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "voter",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "optionId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pollId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "numberOfVotes",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
            ],
            internalType: "struct PollContract.Option[]",
            name: "optionsVoted",
            type: "tuple[]",
          },
        ],
        internalType: "struct PollContract.Vote",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pollId",
        type: "uint256",
      },
    ],
    name: "getPollById",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "bool",
            name: "allowMultipleOptionsSelected",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "closesAt",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "numberOfOptions",
            type: "uint256",
          },
        ],
        internalType: "struct PollContract.Poll",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "optionId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pollId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "numberOfVotes",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        internalType: "struct PollContract.Option[]",
        name: "",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pollId",
        type: "uint256",
      },
    ],
    name: "getPollVotes",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "voteId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pollId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "voter",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "optionId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pollId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "numberOfVotes",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
            ],
            internalType: "struct PollContract.Option[]",
            name: "optionsVoted",
            type: "tuple[]",
          },
        ],
        internalType: "struct PollContract.Vote[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPolls",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "bool",
            name: "allowMultipleOptionsSelected",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "closesAt",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "numberOfOptions",
            type: "uint256",
          },
        ],
        internalType: "struct PollContract.Poll[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPollsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pollId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "optionsVotedIds",
        type: "uint256[]",
      },
    ],
    name: "votePoll",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

export class PollContractAbi__factory {
  static readonly abi = _abi;
  static createInterface(): PollContractAbiInterface {
    return new Interface(_abi) as PollContractAbiInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PollContractAbi {
    return new Contract(address, _abi, runner) as unknown as PollContractAbi;
  }
}
